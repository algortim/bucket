import praw
import config
import time
import os

# login using credentials in config.py
def bot_login():
	print("Logging in...")
	# Note: a new reddit user must be created to act as the bot
	r = praw.Reddit(username = config.username,
			password = config.password,
			# generated after creating Reddit App
			client_id = config.client_id,
			client_secret = config.client_secret,
			# user_agent is a unique string that the dev must make
			# up to describe their bot (using this format is suggested)
			user_agent = "Queen's english agent v0.1 by /u/algortim")
	print("Logged in!")

	return r
# Run bot, find comment and reply. Adding comment ID to .txt file preventing duplicate replies
def run_bot(r, comments_replied_to):
	print("Obtaining 25 comments...")
	for comment in r.subreddit('learnpython').comments(limit=25):
		if "could care less" in comment.body and comment.id not in comments_replied_to and not comment.author == r.user.me():
			print("String \"could care less\" found in comment " + comment.id)
			comment.reply("You *coudn't* care less.\n\n"">could care less\n\n"
						  "As an expression for not or hardly caring just makes no sense.\n\n"
						  "Here is a video to explain in further detail:\n\n"
						  "[Dear America... | David Mitchell's Soap Box](https://www.youtube.com/watch?v=om7O0MFkmpw)")
			print("Replied to comment " + comment.id)

			comments_replied_to.append(comment.id)

			with open ("comments_replied_to.txt", "a") as f:
				f.write(comment.id + "\n")
	# Bot gets some much needed rest
	print("Sleeping for 10 seconds...")
	#Sleep for 10 seconds...
	time.sleep(10)
# Comments filtered
def get_saved_comments():
	if not os.path.isfile("comments_replied_to.txt"):
		comments_replied_to = []
	else:
		with open("comments_replied_to.txt", "r") as f:
			comments_replied_to = f.read()
			comments_replied_to = comments_replied_to.split("\n")
			comments_replied_to = list(filter(None, comments_replied_to))

	return comments_replied_to
# Rerun the bot
r = bot_login()
comments_replied_to = get_saved_comments()
print(comments_replied_to)

while True:
	run_bot(r, comments_replied_to)

